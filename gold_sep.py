
text = "FnFnGsDnFnXtDnXtGsGqFtGkDqDqAqFqDnGtXnDkXqXqDnAsXsAqXnGkDsDqGkFsXqXnDqXqXkXqFnXsXsFsXtDtGtFqDqFqAnFqDtGnGqDqXqXtFnGqXqFqDkGkGsGtGkXsXqDqDqFnXsDnFqFqGsGnFqGnXnDnDnFsXsXqXqFnXsFsFnFqXnDsXqXsDnXqDsFkXtXqGnXsGqFtXkXqXtXqDqXsDqDsGkDqGkXtFtGsDkXsGsGqFsXtFqGqXqXnXqXkFqDqDqFkDnXsXsFnDtDqDkDqDqXnDtGkGtDsFqXsXnXkFsXsAkAnFtXsGnGkXnGsGqGtDkFsFqXtDsFnFsFtDkDkXnFkFsDqDtDsFtFsAkXsDsXsFsDkGtDqDtFqXkFkDkGkXkFtDqXnGqXtDsXsGkFkDqFnGqDnGsFqXnXnDqGnGnDqXsGqXqDnDqDkDsGqDsXqDsGtXnFqDsXsXtAsXsXtXqFqFsDqDnDnXqDnXsDsDqFtGnXtDsDnFkFqFnXsDqXkXkFsFqXsXnAkXkFkFqGqDsXsXsXkDkDqDtGkGsFtFnGnFqFqGkGsDtFqXqFkFsDsGqDnFkDqGqXsXqGnFqDtXtDqFqFsXtDtFtDkDqDqFqGqDtDnFsDkDqFkFsXsGnGqXqFtDqXqFtGnGqDsAsDtDsDkDtXnDqDtGqGkDnXqDqFnXnFsFtXsXsXnXqDkFnGqFsFsFtDkXkDsXqDnXqXsXkDsXtDsXkDsXkGsXnFtFqFsXkXsXtDqGkDnDnDqDqDqDnDqDnDsXnGtFqDqDqDqGqGkDsDqXkAkFkFkXsFqFnFqGqXtAnGsDnXqDqXqFtFsFtXqAnXnXnXkXqGnDnFtDnXqDtGqXqFsXsFkAkDnXsXkDnGtXsDnXtDqFsFnAsGtDsDnDnXnXqFnAkDsFtDqDqGnFkFtXqFtFnDqDqDtDkXqXqFqDtDtDqXqXsFsFqXsFnGkAnFsDqXqAnGqDqFnDsDkXsXkDkGsFkDqDsFsDqXtXtDsGqFsXnGqDqAnFkXsXsDqFqXtXqXkXkDkFkFqGtGkXsDnDnFqFtFqDqDqFsFqXkAkGsXnXqDqGtXtFsFqDnDsAnXqDnDtDsFsFkFkXnXqGqXqFnDkGkFsDkDsFnXnDsFqFqGnXnFqXnGkGsDtDkDqFsGsDtFkFsGsGtDtXqXqGnDnXkXqXnDkDnXsXqDnXqGnXsXnXqDqDsXsXtXsAsGqDqDqDqXqGnXqFsGnXsFqFqGqDsDtDsDqXqGnDtXsXtAqGqFqGqXkXqDsDtFqGqXkGnXkGnDqGqDqDnDqFsFnFqGkFkXqDqXnFsXtDnXsGqFqXtFsGqDtGnGkDqXsDsGnDqFnGnFkDqFqDtDsDsXqFnDtXtGqXqXqDkDtXkXqFsFsXkGsDsFkXqDqDnDnGkXsGqGkDqFqXnFkAkXsFqFkXsGsDqGkXkXkGnDsFnXsGtDsFqDkDqFnXkXkGqXqDnGsXnFsDqXqXnAkAkGqDqFsXkFqFtDnDqXsDnXqXqDqFsDnXqFqGqFnFkXkDqDqFkDqDqXqXqDqGnXnXnGqGnXsXsDqDnXtFtDnGsDqFsFnDtDsFtXkXkFnDqFsAqFqDqXkXsXsXqAtXqXqXsXtXkXnGqXtDnDtXtDnXsXnXtDqGkAkXnXnXqGnXnFsXqDsDqDnGtGnXqXqDtXkFqXqGnDkFqFtXqXqFsFsGkGnXkGqFtDsGqFtXkGnXqXsFqDqFnXsFqDtXkXnDqXsFtDtFnXqDnGsGsFnXkXnFkXnGkGtGnXsXqXsDqXqFqDnDqXkGsXqAqXtGnGkFnDkAkDtFsFnXsGnDsXkXsFtDqDkDqFnDkGqDqDsFkXtDsXqXqGkGqFkFqFsFnGsAkDkDnDqDqFtXqDsGtXnGsAkXtDnGsFtDkDqXnDtDtGkXtXsXkFqGnFtXtGqGnFtXkDsGqXsXnAnDkAsFqFqFtXtDqDqAsGqXsFnXqXqDkGkXsGqFnXqFqDkDqFsDsAkDqXqDsGsGqDkDtXsXqDnXsAqXsDtXtFqXqGnXsFsDnFnAsFnAsAkDsXsXnXnXqFnGqXqFsFnGnXsAsGnDtGkDtGtXtXnXqDqFsFtDnDqXsDqGqDsDsAkXqDtDnDqDqXqXqXnGqDqDnFsDtFnDtXqAnDsDtXsGtXqDnFsFkXtFsXqXkGsGkDkFsDqDqGsXkGnFqDtFnDtDkXsDnGnDsXsDqGnDqGqXsDsAtFtXqGsDtFtGnGnDsXsGsFsDqGtXnDnXtXqFqAnDtDqDqAsDsDqFqGkAnFkDtXtFkXkFkFtFnGkXsDsFqXnGnFkGnXnDkFqDnXtGtXnXtDsGnXkFsGkXqXnFnXqXqDsGtXkGtXtDtDkGsAnXnFqFqGsAsDsFsXqGqXkFqDnXsDtDqFsDtDsXsXqFqGnXsFsAqDsGsGnXnGkFsFkDqDqXnGkXqDqXsFqXsFqGsXnXsFqFqXqFkXtGkFnFkGtXkXtAqDtFkGqXnXqDnDsDqDsAnXtGtXtXsXkFsFqGnGqXtXqAsGtDsGsXqGsXsXkGnFqGnGnDsGqDsFsGnGsDqDqFsXsFtGsXqDnGsGqXnDqDqFkDqXqXqGqXqGnXqFtFsDnXkXkXnDkDtGkGsXqXsXsXsFqDsDnFqGqDqDsXqXqFqDsXsGtFsXnXqDnFsGqAsDsXqFqXnDkDtXsGtXnXtFtGkXqXkXkGsGnGkDqDqGkGtGkGqDqFqGqGqXnDsXqXsDtFkXqXtGqDnXnXkXkFkFqFnFsDsDsDqDtGqDnAqFnXqGqFsFqFqFnXtGtDqAsGnDtDsXqGqXkDnGqGnDqDqXqDqXkGsXtFqDnFnDsFqFqDnGsDkDtXsDnFqDtDqXtAsXsGqDtFsAkFtFqGnDsFtAsGqXkDsFtGqXtXqGsXkXqXtAsGqXsFsFsDsFsFqXqXsDsFkGsXkDqXtAtFnGqDnDnFsFnXtDqFnFkXtDnGsDnFqGnXnFqXqFsGqGsDkXtGqAkXsDqXsGnFqDqAsDkXtAsDkFsFnGnDqFnGtDkXtFnDnGtFqFsAsGtDqFqGnFkDsXtDsXkGnXnFkFsGtXkDkFnDqFqFkXqGqFsXqFqXkXkXsDkXqDqAsGqDnDsFsGqGsGqGnDqXtXkGqFqFqGtXqXtFsXqXtFsFqDqFqDsXtFkDqGtDsGkDsXsDtFnFkGqDqXsDnDqDtFkXqFtXtXqFqGqGnDtAtXqFqDsFtXkXqFqAtDkGnXqDkGnGqGqFkGqXtGsDnXsDnXsFtXtXkFtXqDsXqDsAsDnXsFqFqDsDqGnDkDkDnXqFqGqGqDnXnXqFtFqXsFsXtDkXsXtXqGqDsXsXsFkAkGnGsXnDkFqXsFnGkGsXnFsDkFqDqGsGsXsDkDtXsFqFtFtFkFqXnAtDqXqFqDsFqGnXkFqGnFsGqDkFsAtXqAtXkXqFqXsFsDsGqGtAsAkFsFqGnGXsXsDnGkFsFtDsXqXqDqFkDkDsXkXqXsXtDtGqFsFnXsXkDqFtXqXqGsFkXnGkGqFnXsFsDsGqXsXsXqXqGnGkFtDkXtFsXkDnDsFkDtXtFtFsDnGqGqAsXqXsDkDsXqDtXtDkFsFkDqDnXtGtDtGqGnGqXqXtXqXsXqXsDqDkDqDnDtFkFtDkGnAqAkXqGsXqFqDnXsXkFqDsGqXqDkDqFqFqXsXnGqXqGtXqDqFqDsXnAqDqDtDnDqDsDnGqXsXnXkFsDsGkGqDnDnDnGkFqXsFtXkDkGsFqGtDtFqXsXnAqGkXqXtGnXnGnFqXsDsDsDnDqDqFsXqFsXqXnXqFqXnGqAtAqGqXqXqXqXqDqFqXsGnFqXnDnDnDsGqGqFqXsXqXqXkXsFkFtDsDqFqAqXnXnXtFsXnDqFnDnXqAsXqFqFsDnXkXkFsDkFqDnXsFqGsGnFkXqXtXkXsFtGnGnFqXqGqFkXqXqDtDsGkDqDtXqXkXnXtFsDkGnXsDqFnXtXqXsFtXsFkXqGkGsDqGqFqGqDnDnDsDqXtFqXsXkDqXkFnGkFsDsXsDkDqXqGkXnDqGqDnFsGtXsXkFtDsDsFqXsXnFsDqGqGnGkFtFkDnXkFtFsXnFqFsXqDqDsXsGtAnFsFtGnGnDsXsXkGqFnGnXtGqXqXkXqFnXkXkDkDsAnXqXkGqGqDtXqXqAtXqDqDnFtFsXnDtXkGkFkXtDtXqAtDqFnGqGsXqXsXsFtDtGkGtFtXtFnXtXqXqDsXqXnXqFqXqFqFkXqXtXqGqXkXtGnXqFqGsFtFqXkGkDnXkDqXtDkDtXqGsGnXqFsGqDkGnXkFkFnDsXqXsXnGsDnGnFqDsFsGqDqDkFsFtFqXsFsFnGsXnFnDqFkFkFtFqXnDqXqDsGtXnXqFqGqGsDnFsAtFnDnFkXqXtDtXkFqFnXtFtDqXqDkDqFqDsXtDqGqAqAsFtXqDkXqXtGkDtFqFnXnFqXqXsDqXsFqDqFqXqAtAqDkFsGqXqDsXkXsGnXkDkDqDsFtAqFqFtDtXsDqXsDqGqDtGnXsAnGnGqDkXnFnXqGnGkXtXqXsXsDqXnFqFtGtFsGtDqGnDsXqFkXsGtXsXtDqXtXqXsAqXnDkFkXsGtFtDkXnDtFqGkAnFkXsGkGqAqFkFqFtGsFsDtGsFkXqFsDnFsFkXqAkXnDqFqDqDkXqXtFsFkXkGsDqGqAsGqDsXsGnDqXsFsGqXnXnXkDkAsDkXkDqFnXqFkDsDtXsXkDqAkDkDqGnXqFqGsGkXqDsFnXtXsFsGnGsXsGkXqFqFkXnGqGqGsAsFkFqDnGqDkDnDkDsDnDsFkXkGqFsDsDqGnFqXnXkXnXkGkGsXqGkDqXtGkDkDsGq"

t1 = ""
t2 = ""

for letter in text[:len(text) / 2]:

	if ord(letter) > 96:
		t1 = t1 + letter
	else:
		t2 = t2 + letter
print t1

print "\n\n\n"
print t2